{"ast":null,"code":"// window Resize hooks\nimport{useEffect,useState}from\"react\";export const useWindowResize=()=>{const initSize=[window.innerWidth,window.innerHeight];const[windowSize,setWindowSize]=useState(initSize);useEffect(()=>{const handleSize=()=>{setWindowSize([window.innerWidth,window.innerHeight]);};window.addEventListener(\"resize\",handleSize);return()=>{window.removeEventListener(\"resize\",handleSize);};},[]);return windowSize;};","map":{"version":3,"names":["useEffect","useState","useWindowResize","initSize","window","innerWidth","innerHeight","windowSize","setWindowSize","handleSize","addEventListener","removeEventListener"],"sources":["/Users/zoe/Documents/Wishread/src/utils.ts"],"sourcesContent":["// window Resize hooks\n\nimport { useEffect, useState } from \"react\";\n\ntype Windowsize = [number, number];\n\nexport const useWindowResize = (): Windowsize => {\n  const initSize: Windowsize = [window.innerWidth, window.innerHeight];\n  const [windowSize, setWindowSize] = useState<Windowsize>(initSize);\n  useEffect(() => {\n    const handleSize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener(\"resize\", handleSize);\n    return () => {\n      window.removeEventListener(\"resize\", handleSize);\n    };\n  }, []);\n  return windowSize;\n};\n"],"mappings":"AAAA;AAEA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAI3C,MAAO,MAAM,CAAAC,eAAe,CAAGA,CAAA,GAAkB,CAC/C,KAAM,CAAAC,QAAoB,CAAG,CAACC,MAAM,CAACC,UAAU,CAAED,MAAM,CAACE,WAAW,CAAC,CACpE,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGP,QAAQ,CAAaE,QAAQ,CAAC,CAClEH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,UAAU,CAAGA,CAAA,GAAM,CACvBD,aAAa,CAAC,CAACJ,MAAM,CAACC,UAAU,CAAED,MAAM,CAACE,WAAW,CAAC,CAAC,CACxD,CAAC,CACDF,MAAM,CAACM,gBAAgB,CAAC,QAAQ,CAAED,UAAU,CAAC,CAC7C,MAAO,IAAM,CACXL,MAAM,CAACO,mBAAmB,CAAC,QAAQ,CAAEF,UAAU,CAAC,CAClD,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CAAAF,UAAU,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}