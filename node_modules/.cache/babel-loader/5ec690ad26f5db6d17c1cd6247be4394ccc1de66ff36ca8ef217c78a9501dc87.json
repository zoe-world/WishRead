{"ast":null,"code":"import axios, { AxiosError } from \"axios\";\nimport { atom, selectorFamily } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\nconst {\n  persistAtom\n} = recoilPersist();\n\n// kakao API 호출\nconst KAKAO_API_KEY = process.env.REACT_APP_KAKAO_API_KEY;\nexport const bookData = selectorFamily({\n  key: \"bookData\",\n  get: search => async ({\n    get\n  }) => {\n    // API 호출\n    try {\n      const res = await axios({\n        method: \"get\",\n        baseURL: \"https://dapi.kakao.com/v3/search/book\",\n        headers: {\n          Authorization: \"KakaoAK \" + KAKAO_API_KEY\n        },\n        params: {\n          query: search,\n          size: 50,\n          target: [\"title\", \"person\"]\n        }\n      });\n      let newData = res.data.documents.map(el => {\n        return {\n          ...el,\n          watch: false,\n          isMarked: f\n        };\n      });\n      return newData;\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        var _error$response;\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n          console.log(error);\n        }\n      }\n    }\n  }\n});\n\n// 검색어\nexport const searchInfoState = atom({\n  key: \"searchInfoState\",\n  default: \"\"\n});\n\n// 검색한 책\nexport const bookDataState = atom({\n  key: \"bookDataState\",\n  default: [],\n  effects_UNSTABLE: [persistAtom]\n});\n\n// 북마크한 책\nexport const bookmarkState = atom({\n  key: \"bookmark\",\n  default: [],\n  effects_UNSTABLE: [persistAtom]\n});\nexport const filteredBookSelector = selectorFamily({\n  key: \"filteredBookSelector\",\n  get: bookCode => ({\n    get\n  }) => {\n    const bookState = get(bookDataState);\n    const findItem = bookState === null || bookState === void 0 ? void 0 : bookState.find(item => {\n      return item.isbn == bookCode;\n    });\n    console.log(findItem);\n    return findItem === null || findItem === void 0 ? void 0 : findItem.watch;\n  },\n  set: bookCode => ({\n    set,\n    get\n  }, newValue) => {\n    const bookState = get(bookDataState);\n    const updatedData = bookState === null || bookState === void 0 ? void 0 : bookState.filter(el => {\n      if (el.isbn == bookCode) {}\n      // el을 변환하고 반환하는 작업을 수행\n      return {\n        ...el,\n        watch: newValue\n      };\n    });\n    console.log(`이건 set ${updatedData}`);\n    set(bookDataState, updatedData);\n  }\n});","map":{"version":3,"names":["axios","AxiosError","atom","selectorFamily","recoilPersist","persistAtom","KAKAO_API_KEY","process","env","REACT_APP_KAKAO_API_KEY","bookData","key","get","search","res","method","baseURL","headers","Authorization","params","query","size","target","newData","data","documents","map","el","watch","isMarked","f","error","_error$response","response","status","console","log","searchInfoState","default","bookDataState","effects_UNSTABLE","bookmarkState","filteredBookSelector","bookCode","bookState","findItem","find","item","isbn","set","newValue","updatedData","filter"],"sources":["/Users/zoe/Documents/Wishread/src/recoil/books.ts"],"sourcesContent":["import axios, { AxiosError } from \"axios\";\nimport { BookDTO } from \"components/types/searchType\";\nimport { atom, selector, selectorFamily } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist();\n\n// kakao API 호출\nconst KAKAO_API_KEY = process.env.REACT_APP_KAKAO_API_KEY;\n\nexport const bookData = selectorFamily({\n  key: \"bookData\",\n  get:\n    (search) =>\n    async ({ get }) => {\n      // API 호출\n      try {\n        const res = await axios({\n          method: \"get\",\n          baseURL: \"https://dapi.kakao.com/v3/search/book\",\n          headers: {\n            Authorization: \"KakaoAK \" + KAKAO_API_KEY,\n          },\n          params: {\n            query: search,\n            size: 50,\n            target: [\"title\", \"person\"],\n          },\n        });\n        let newData = res.data.documents.map((el: any) => {\n          return { ...el, watch: false , isMarked:f};\n        });\n        return newData;\n      } catch (error) {\n        if (error instanceof AxiosError) {\n          if (error.response?.status === 400) {\n            console.log(error);\n          }\n        }\n      }\n    },\n});\n\n// 검색어\nexport const searchInfoState = atom({\n  key: \"searchInfoState\",\n  default: \"\",\n});\n\n// 검색한 책\nexport const bookDataState = atom<BookDTO[]>({\n  key: \"bookDataState\",\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\n// 북마크한 책\nexport const bookmarkState = atom({\n  key: \"bookmark\",\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const filteredBookSelector = selectorFamily({\n  key: \"filteredBookSelector\",\n  get:\n    (bookCode) =>\n    ({ get }) => {\n      const bookState = get(bookDataState);\n      const findItem = bookState?.find((item) => {\n        return item.isbn == bookCode;\n      });\n      console.log(findItem);\n      return findItem?.watch;\n    },\n  set:\n    (bookCode) =>\n    ({ set, get }, newValue) => {\n      const bookState = get(bookDataState);\n      const updatedData = bookState?.filter((el: any) => {\n        if (el.isbn == bookCode) {\n        }\n        // el을 변환하고 반환하는 작업을 수행\n        return { ...el, watch: newValue };\n      });\n      console.log(`이건 set ${updatedData}`);\n      set(bookDataState, updatedData);\n    },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}