{"ast":null,"code":"import axios, { AxiosError } from \"axios\";\nimport { atom, selector, selectorFamily } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\nconst {\n  persistAtom\n} = recoilPersist();\n\n// kakao API 호출\nconst KAKAO_API_KEY = process.env.REACT_APP_KAKAO_API_KEY;\n\n// 검색한 결과값\nexport const bookDataState = atom({\n  key: \"bookDataState\",\n  default: []\n});\n\n// 입력한 검색어\nexport const searchInfoState = atom({\n  key: \"searchInfoState\",\n  default: \"\"\n});\n\n// 상세보기 책\nexport const bookDetailState = atom({\n  key: \"bookDetailState\",\n  default: [],\n  effects_UNSTABLE: [persistAtom]\n});\n\n// 북마크한 책\nexport const bookmarkState = atom({\n  key: \"bookmark\",\n  default: [],\n  effects_UNSTABLE: [persistAtom]\n});\n\n// 검색 api 호출\nexport const bookDataSelectorFamily = selectorFamily({\n  key: \"bookDataSelectorFamily\",\n  get: search => async ({\n    get\n  }) => {\n    // API 호출\n    try {\n      const res = await axios({\n        method: \"get\",\n        baseURL: \"https://dapi.kakao.com/v3/search/book\",\n        headers: {\n          Authorization: \"KakaoAK \" + KAKAO_API_KEY\n        },\n        params: {\n          query: search,\n          size: 50,\n          target: [\"title\", \"person\"]\n        }\n      });\n      return res.data.documents;\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        var _error$response;\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n          console.log(error);\n        }\n      }\n    }\n  }\n});\n\n//검색을 하고 눌르면 watch 추가\n// 그럼 추가된 아이템을 detail 담아두고 나중에 또 검색했을 때, watch 가 있으면? 그냥 냅두기\n// 없으면? detail 에 추가\n\n// 검색한 책 중 눌러본 책 필터링 후 watch 속성 추가\nexport const detailBookSelector = selector({\n  key: \"detailBookSelector\",\n  get: ({\n    get\n  }) => {\n    const bookState = get(bookDataState);\n    const findItem = bookState.find(item => item.watch === true);\n    console.log(findItem);\n    return findItem;\n  },\n  set: ({\n    set,\n    get\n  }, newValue) => {\n    const bookState = get(bookDataState);\n    const updatedData = bookState.map(item => {\n      if (item === newValue) {\n        return {\n          ...item,\n          watch: true\n        };\n      }\n      return {\n        ...item,\n        watch: false\n      };\n    });\n    set(bookDataState, updatedData);\n  }\n});\n// 검색한 책 중 눌러본 책 필터링 후 watch 속성 추가\nexport const bookMarkSelector = selector({\n  key: \"bookMarkSelector\",\n  get: ({\n    get\n  }) => {\n    const bookMarkState = get(bookDetailState);\n    // const findItem = bookMarkState.find((item: any) => item.isMarked === true);\n    console.log(bookMarkState);\n    return findItem;\n  },\n  set: ({\n    set,\n    get\n  }, newValue) => {\n    const bookMarkState = get(bookDetailState);\n    const updatedData = bookMarkState.map(item => {\n      if (item === newValue) {\n        return {\n          ...item,\n          isMarked: true\n        };\n      }\n      return {\n        ...item,\n        isMarked: false\n      };\n    });\n    set(bookDataState, updatedData);\n  }\n});","map":{"version":3,"names":["axios","AxiosError","atom","selector","selectorFamily","recoilPersist","persistAtom","KAKAO_API_KEY","process","env","REACT_APP_KAKAO_API_KEY","bookDataState","key","default","searchInfoState","bookDetailState","effects_UNSTABLE","bookmarkState","bookDataSelectorFamily","get","search","res","method","baseURL","headers","Authorization","params","query","size","target","data","documents","error","_error$response","response","status","console","log","detailBookSelector","bookState","findItem","find","item","watch","set","newValue","updatedData","map","bookMarkSelector","bookMarkState","isMarked"],"sources":["/Users/zoe/Documents/Wishread/src/recoil/books.ts"],"sourcesContent":["import axios, { AxiosError } from \"axios\";\nimport { BookDTO } from \"components/types/searchType\";\nimport { atom, selector, selectorFamily } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist();\n\n// kakao API 호출\nconst KAKAO_API_KEY = process.env.REACT_APP_KAKAO_API_KEY;\n\n// 검색한 결과값\nexport const bookDataState = atom<BookDTO[]>({\n  key: \"bookDataState\",\n  default: [],\n});\n\n// 입력한 검색어\nexport const searchInfoState = atom({\n  key: \"searchInfoState\",\n  default: \"\",\n});\n\n// 상세보기 책\nexport const bookDetailState = atom({\n  key: \"bookDetailState\",\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\n// 북마크한 책\nexport const bookmarkState = atom({\n  key: \"bookmark\",\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\n// 검색 api 호출\nexport const bookDataSelectorFamily = selectorFamily({\n  key: \"bookDataSelectorFamily\",\n  get:\n    (search) =>\n    async ({ get }) => {\n      // API 호출\n      try {\n        const res = await axios({\n          method: \"get\",\n          baseURL: \"https://dapi.kakao.com/v3/search/book\",\n          headers: {\n            Authorization: \"KakaoAK \" + KAKAO_API_KEY,\n          },\n          params: {\n            query: search,\n            size: 50,\n            target: [\"title\", \"person\"],\n          },\n        });\n        return res.data.documents;\n      } catch (error) {\n        if (error instanceof AxiosError) {\n          if (error.response?.status === 400) {\n            console.log(error);\n          }\n        }\n      }\n    },\n});\n\n//검색을 하고 눌르면 watch 추가\n// 그럼 추가된 아이템을 detail 담아두고 나중에 또 검색했을 때, watch 가 있으면? 그냥 냅두기\n// 없으면? detail 에 추가\n\n// 검색한 책 중 눌러본 책 필터링 후 watch 속성 추가\nexport const detailBookSelector = selector({\n  key: \"detailBookSelector\",\n  get: ({ get }) => {\n    const bookState = get(bookDataState);\n    const findItem = bookState.find((item: any) => item.watch === true);\n    console.log(findItem);\n    return findItem;\n  },\n  set: ({ set, get }, newValue) => {\n    const bookState = get(bookDataState);\n    const updatedData = bookState.map((item: any) => {\n      if (item === newValue) {\n        return { ...item, watch: true };\n      }\n      return { ...item, watch: false };\n    });\n    set(bookDataState, updatedData);\n  },\n});\n// 검색한 책 중 눌러본 책 필터링 후 watch 속성 추가\nexport const bookMarkSelector = selector({\n  key: \"bookMarkSelector\",\n  get: ({ get }) => {\n    const bookMarkState = get(bookDetailState);\n    // const findItem = bookMarkState.find((item: any) => item.isMarked === true);\n    console.log(bookMarkState);\n    return findItem;\n  },\n  set: ({ set, get }, newValue) => {\n    const bookMarkState = get(bookDetailState);\n    const updatedData = bookMarkState.map((item: any) => {\n      if (item === newValue) {\n        return { ...item, isMarked: true };\n      }\n      return { ...item, isMarked: false };\n    });\n    set(bookDataState, updatedData);\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}