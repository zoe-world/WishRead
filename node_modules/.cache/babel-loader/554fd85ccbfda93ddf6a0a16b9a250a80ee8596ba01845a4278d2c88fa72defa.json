{"ast":null,"code":"var _s = $RefreshSig$();\n// window Resize hooks\n\nimport { useEffect, useState } from \"react\";\nexport const useWindowResize = () => {\n  _s();\n  const initSize = [window.innerWidth, window.innerHeight];\n  const [windowSize, setWindowSize] = useState(initSize);\n  useEffect(() => {\n    const handleSize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener(\"resize\", handleSize);\n    return () => {\n      window.removeEventListener(\"resize\", handleSize);\n    };\n  }, []);\n  return windowSize;\n};\n_s(useWindowResize, \"CrzyIuCCJla92N+xSHkXHKqq42E=\");","map":{"version":3,"names":["useEffect","useState","useWindowResize","_s","initSize","window","innerWidth","innerHeight","windowSize","setWindowSize","handleSize","addEventListener","removeEventListener"],"sources":["/Users/zoe/Documents/Wishread/src/utils.ts"],"sourcesContent":["// window Resize hooks\n\nimport { useEffect, useState } from \"react\";\n\ntype Windowsize = [number, number];\n\nexport const useWindowResize = (): Windowsize => {\n  const initSize: Windowsize = [window.innerWidth, window.innerHeight];\n  const [windowSize, setWindowSize] = useState<Windowsize>(initSize);\n  useEffect(() => {\n    const handleSize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener(\"resize\", handleSize);\n    return () => {\n      window.removeEventListener(\"resize\", handleSize);\n    };\n  }, []);\n  return windowSize;\n};\n"],"mappings":";AAAA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAI3C,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EAC/C,MAAMC,QAAoB,GAAG,CAACC,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;EACpE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAaG,QAAQ,CAAC;EAClEJ,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGA,CAAA,KAAM;MACvBD,aAAa,CAAC,CAACJ,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC,CAAC;IACxD,CAAC;IACDF,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAED,UAAU,CAAC;IAC7C,OAAO,MAAM;MACXL,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEF,UAAU,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,UAAU;AACnB,CAAC;AAACL,EAAA,CAbWD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}